.baseOffset(@colTotal, @colNum, @count: 1) when (@count < @colTotal){
	.checkVal() when ((@count + @colNum) =< @colTotal){
		[class *= "-@{colNum}-@{colTotal}"].start-@{count} {
			@p: round(@count / @colTotal * 100, 4);
			position: relative;
			left: ~"@{p}%";
		}
		[class *= "-@{colNum}-@{colTotal}"].end-@{count} {
			@p: round(@count / @colTotal * 100, 4);
			position: relative;
			right: ~"@{p}%";
		}
	}
	.checkVal();
	.baseOffset(@colTotal, @colNum, @count + 1);
}
// Small Stuff
.smMediaOffsets(@n, @i: 1) when (@i < @n){
	.smOffset(@n, @i); // Sm Grid
	.smMediaOffsets(@n, @i + 1);
}

.smOffset(@colTotal, @colNum, @count: 1) when (@count < @colTotal){
	.checkVal() when ((@count + @colNum) =< @colTotal){
		[class *= "-@{colNum}-@{colTotal}"].start-sm-@{count}{
			@p: round(@count / @colTotal * 100, 4);
			position: relative;
			left: ~"@{p}%";
		}
		[class *= "-@{colNum}-@{colTotal}"].end-sm-@{count}{
			@p: round(@count / @colTotal * 100, 4);
			position: relative;
			right: ~"@{p}%";
		}
	}
	.checkVal();
	.smOffset(@colTotal, @colNum, @count + 1);
}
// Medium Stuff
.mdMediaOffsets(@n, @i: 1) when (@i < @n){
	.mdOffset(@n, @i); // Sm Grid
	.mdMediaOffsets(@n, @i + 1);
}

.mdOffset(@colTotal, @colNum, @count: 1) when (@count < @colTotal){
	.checkVal() when ((@count + @colNum) =< @colTotal){
		[class *= "-@{colNum}-@{colTotal}"].start-md-@{count}{
			@p: round(@count / @colTotal * 100, 4);
			position: relative;
			left: ~"@{p}%";
		}
		[class *= "-@{colNum}-@{colTotal}"].end-md-@{count}{
			@p: round(@count / @colTotal * 100, 4);
			position: relative;
			right: ~"@{p}%";
		}
	}
	.checkVal();
	.mdOffset(@colTotal, @colNum, @count + 1);
}
// Large Stuff
.lgMediaOffsets(@n, @i: 1) when (@i < @n){
	.lgOffset(@n, @i); // Sm Grid
	.lgMediaOffsets(@n, @i + 1);
}
.lgOffset(@colTotal, @colNum, @count: 1) when (@count < @colTotal){
	.checkVal() when ((@count + @colNum) =< @colTotal){
		[class *= "-@{colNum}-@{colTotal}"].start-lg-@{count}{
			@p: round(@count / @colTotal * 100, 4);
			position: relative;
			left: ~"@{p}%";
		}
		[class *= "-@{colNum}-@{colTotal}"].end-lg-@{count}{
			@p: round(@count / @colTotal * 100, 4);
			position: relative;
			right: ~"@{p}%";
		}
	}
	.checkVal();
	.lgOffset(@colTotal, @colNum, @count + 1);
}
// XL-Large Stuff
.xlMediaOffsets(@n, @i: 1) when (@i < @n){
	.xlOffset(@n, @i);
	.xlMediaOffsets(@n, @i + 1);
}
.xlOffset(@colTotal, @colNum, @count: 1) when (@count < @colTotal){
	.checkVal() when ((@count + @colNum) =< @colTotal){
		[class *= "-@{colNum}-@{colTotal}"].start-xl-@{count}{
			@p: round(@count / @colTotal * 100, 4);
			position: relative;
			left: ~"@{p}%";
		}
		[class *= "-@{colNum}-@{colTotal}"].end-xl-@{count}{
			@p: round(@count / @colTotal * 100, 4);
			position: relative;
			right: ~"@{p}%";
		}
	}
	.checkVal();
	.xlOffset(@colTotal, @colNum, @count + 1);
}

.regOffsets(@n, @i: 1) when (@i < @n){
	.baseOffset(@n, @i); // Default Grid
	.regOffsets(@n, @i + 1);
}